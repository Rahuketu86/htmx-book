# AUTOGENERATED! DO NOT EDIT! File to edit: 01_main.ipynb.

# %% auto 0
__all__ = ['app', 'Contact', 'index', 'contacts', 'view', 'edit', 'new']

# %% 01_main.ipynb 2
import pandas as pd
from flask import Flask, redirect, request, render_template
import json
from IPython.display import display_html

# %% 01_main.ipynb 8
class Contact(object):
    def __init__(self) -> None:
        self.refresh()

    def search(self, q):
        predicate_firstname = self.db['firstname'].str.lower().str.contains(q.lower())
        predicate_lastname = self.db['lastname'].str.lower().str.contains(q.lower())
        predicate_phone = self.db['phone'].str.lower().str.contains(q.lower())
        predicate_email= self.db['email'].str.lower().str.contains(q.lower())
        filter_df = self.db[predicate_firstname|predicate_lastname|predicate_phone|predicate_email]
        return filter_df.to_dict('records')
    
    def refresh(self):
        self.file_path = 'contactdb.json'
        self.db = pd.read_json(self.file_path)


    def all(self):
        return self.db.to_dict('records')
    
    def get(self, id):
        contact = self.db[self.db['id']==id]
        # print(contact)
        return contact.to_dict('records')[0]
    
    def add(self, firstname, lastname, phone, email):
        a={'firstname': firstname,
           'lastname': lastname,
           'phone':phone,
           'email': email}
        a['id'] = len(self.db)
        self.db.loc[len(self.db), a.keys()] = a.values()
        self.db.to_json(file_path, orient='records')
        self.refresh()

    def delete(self, id):
        self.db.drop(index=id, inplace=True, errors='raise')
        self.db.to_json(file_path, orient='records')
        self.refresh()

    def edit(self, id, firstname, lastname, phone, email):
        a={'firstname': firstname,
           'lastname': lastname,
           'phone':phone,
           'email': email,
           'id': id}
        self.db.loc[id, a.keys()] = a.values()
        self.db.to_json(file_path, orient='records')
        self.refresh()


# %% 01_main.ipynb 12
app = Flask(__name__)

# %% 01_main.ipynb 13
@app.get("/")
def index():
    return redirect("/contacts")

# %% 01_main.ipynb 14
@app.get("/contacts")
def contacts():
    search = request.args.get("q")
    contact_set = None
    if search is not None: contact_set = Contact().search(search)
    else: contact_set = Contact().all()
    # print(contact_set)
    return render_template("index.html", contact_set=contact_set)

# %% 01_main.ipynb 16
@app.get("/contacts/<int:id>")
def view(id:int):
    return render_template("view.html", contact=Contact().get(id))

# %% 01_main.ipynb 19
@app.put("/contacts/<int:id>/edit")
def edit(id):
    return "Edit View"

# %% 01_main.ipynb 20
@app.post("/contacts/new")
def new():
    return "New View"
